#
# Copyright (c) 2018-2022, Rapidomize.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# OR contact:
# contact@rapidomize.com
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.
#

app.name=rpzc

# transport type HTTPS=0, WSS=1 and MQTT=2
transport.type = 0

# Connect exponential retry mechanism. that depends on the application. Supported retries mechanisms are:
# This is useful for devices that need no manually intervention, and to reduce battery drain.
# Also, this may be a good strategy for mobile clients to optimize battery in doze mode.
# For websocket, assuming that it need retaining forever, infinite retry is used. See ExpBackOff for more info.
transport.retry.max =-1

# Retry strategy can be
# SIMPLE=0   - retry algo without jitter
# ADVANCE=1  - with jitter without constant factor
transport.retry.strategy =0

# for HTTP auth can be either jwt(Bearer) or Basic. For Basic, user must obtain a pre-shared token from app->tokens
# For Bearer, currently no support for refreshing the token. So it must need to be submitted to /api/v1/pau endpoint for
# updating before it expires. Also at client instantiation token can be assigned programatically.

#HTTPS / WSS
#Clients who need responding to platform sent requests (via ICApps settings) need to connect to websocket/mqtt endpoint.
#Clients who ONLY send events to the platform without needing responding to platform sent requests, should use https endpoint.
ep.host=ics.rapidomize.com




